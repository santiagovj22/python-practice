"""empty message

Revision ID: 4ccf99e567ac
Revises: cf316a537584
Create Date: 2019-10-14 17:19:23.752060

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4ccf99e567ac'
down_revision = 'cf316a537584'
branch_labels = None
depends_on = None

idtype = sa.Table(
    'idtypes',
    sa.MetaData(),
    sa.Column('typename', sa.String()),
    sa.Column('display_name', sa.String()),
    sa.Column('description', sa.String()),
    sa.Column('regex', sa.String())
)

identifier = sa.Table(
    'identifiers',
    sa.MetaData(),
    sa.Column('id_str', sa.String(length=40)),
    sa.Column('asset',  sa.String()),
    sa.Column('type', sa.String())
)

atype = sa.Table(
    'attributetypes',
    sa.MetaData(),
    sa.Column('typename', sa.String(length=100)),
    sa.Column('display_name', sa.String(length=100)),
    sa.Column('description', sa.String()),
    sa.Column('unique', sa.Boolean()),
    sa.Column('identifier', sa.Boolean())
)

attribute = sa.Table(
    'attributes',
    sa.MetaData(),
    sa.Column('uuid', sa.String()),
    sa.Column('original', sa.String()),
    sa.Column('type', sa.String(length=100)),
    sa.Column('asset', sa.String),
    sa.Column('value', sa.String),
    sa.Column('data', sa.JSON()),
    sa.Column('active', sa.Boolean()),
    sa.Column('is_id', sa.Boolean())
)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('attributes', sa.Column('is_id', sa.BOOLEAN(), server_default='FALSE', nullable=False))
    op.create_index('attributes_identifiers', 'attributes', ['type', 'value'], unique=True, postgresql_where=sa.text('is_id IS true AND active IS true'))
    op.add_column('attributetypes', sa.Column('identifier', sa.BOOLEAN(), server_default='FALSE', nullable=False))
    # ### end Alembic commands ###

    # move existing identifiers from identifier table to attributes with is_id flag
    c = op.get_bind()

    for idt in c.execute(idtype.select()):
        c.execute(
            atype.insert().values(
                typename=idt.typename,
                display_name=idt.display_name,
                description=idt.description,
                unique=False,
                identifier=True
            )
        )


    for id in c.execute(identifier.select()):
        c.execute(
            attribute.insert().values(
                type=id.type,
                asset=id.asset,
                value=id.id_str,
                active=True,
                is_id=True
            )
        )

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('attributetypes', 'identifier')
    op.drop_index('attributes_identifiers', table_name='attributes')
    op.drop_column('attributes', 'is_id')
    # ### end Alembic commands ###
